/*
C#, как и любой другой язык, поставляется с набором полезных методов. 
Все вместе они составляют так называемую стандартную библиотеку. 
В неё обычно входят тысячи методов, которые невозможно выучить 
— этого и не нужно делать. 

Подразумевается, что любой программист знает, 
где искать документацию по ним и примерно представляет себе, 
чего он хочет достичь. 
А дальше — дело техники. 
Если отнять у программистов интернет, 
то большинство не сможет ничего запрограммировать.

Для новичков эта информация часто выглядит так: 
«Сходи туда, не знаю куда, принеси то, не знаю что». 
То есть непонятно, как узнавать про эти методы, 
когда ты ничего не знаешь вообще. 

Как ни странно, не существует способа раз и навсегда познать всё, что нужно познать. 
Любой разработчик в процессе своего профессионального взросления 
знакомится со всё более интересными методами, решающими его задачи более элегантно, 
и таким образом пополняет свой арсенал.

Вот некоторые советы, как узнавать о новых методах:

-> Всегда чётко отслеживайте, с чем вы сейчас работаете (какой тип данных). 
Почти всегда вы найдете необходимый метод в соответствующем разделе документации 
— например, для работы со строками нужно изучать строковые методы.

-> Периодически открывайте раздел со стандартными методами по изучаемой тематике 
и просто пробегайтесь по ним, изучая сигнатуры и способы использования.

-> Чаще читайте чужой код, особенно код библиотек, которые вы используете. 
Он весь доступен на GitHub.

Задание
В названии войны в Семи Королевствах вкралась опечатка: 
пропущено слово "Five". 
Попробуйте самостоятельно найти в документации к языку нужный метод, 
которым можно вставить одну строку в другую. 
Результат должен получится таким:

War of the Five Kings
*/
var war = "War of the Kings";
var missingWord = "Five ";
Console.WriteLine(war.Insert(11, missingWord));
//Вывод: " War of the Five Kings"
/*
Метод Insert работает с существующей переменной типа String или литералом, 
и требует два параметра. 
Первый - это целое число, которое указывает на позицию, 
в которую должна быть вставлена вторая строка. 
Это целое число подсчитывает символы слева с нулем, указывающим, 
что вставка будет в начале строки. 
Второй параметр - это строка, которая будет вставлена. 
*/
string template = "Пожалуйста, спросите  по прибытии.";
string tutor = "Лизу";
Console.WriteLine(template.Insert(21, tutor));
//Вывод: " Пожалуйста, спросите Лизу по прибытии."








