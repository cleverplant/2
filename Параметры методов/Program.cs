/* 
Такой метод как ToUpper() не требует никаких уточнений. 
Он всегда работает однозначно и возвращает строку в верхнем регистре. 
Но так бывает не всегда, например если мы хотим получить 
номер определенного символа в строке, 
то нам нужно как-то указать какой символ мы ищем. 
Для этого в вызовы методов можно передавать аргументы. Пример:
*/
var name = "Bran";
// Находит номер указанного символа
name.IndexOf('B'); // 0
Console.WriteLine(name.IndexOf('B'));// 0
/*
Почему символ первый, а вернулось 0? 
В программировании отсчет начинается с нуля. 

Поэтому первый символ находится на нулевой позиции 
или как говорят его индекс 0. 

Соответственно у последнего символа индекс 
- это "длина строки - 1".
*/
// var name = "Bran";
// var nameLength = name.Length;

// var lastCharIndex = nameLength - 1;
// name[lastCharIndex]; // 'n'
// Console.WriteLine(name[lastCharIndex]);
/*
Несколько аргументов

Параметров может быть больше чем один. 
Например метод Replace() работает с двумя, 
где первый это что заменить и второй – на что.
*/
// var name = "Ramsay Snow";
// name.Replace("Snow", "Bolton"); // "Ramsay Bolton"
// Console.WriteLine(name.Replace("Snow", "Bolton"));
/*
Значения по умолчанию

Параметры могут содержать значение по умолчанию, 
там где это значение является наиболее часто используемым. 
Такая возможность в языках добавлена исключительно для избавления программиста от рутины. 

Простой пример – метод извлекающий подстроку (часть строки) из строки. 
Первым параметром этот метод принимает на вход индекс 
с которого надо начать извлекать подстроку, 
а вторым – длину извлекаемой подстроки. 

По умолчанию берется строка до конца:
*/
"Bran".Substring(1); // "ran"
"Bran".Substring(1, 2); // "ra"
"Bran".Substring(1, 3); // "ran"
"Bran".Substring(2, 2); // "an"
Console.WriteLine("Bran".Substring(1));
Console.WriteLine("Bran".Substring(1, 2));
Console.WriteLine("Bran".Substring(1, 3));
Console.WriteLine("Bran".Substring(2, 2));
/*
Индексаторы

В C# у некоторых типов есть особенные методы – индексаторы. 
В частности, у строк есть индексатор. 
Для вызова метода-индексатора не нужно указывать название метода, 
а вызвать сам объект с квадратными скобками, например:
*/
// "Bran"[0];  // 'B'
// "Bran"[1];  // 'r'
// "Bran"[2];  // 'a'
// "Bran"[3];  // 'n'
// Console.WriteLine("Bran"[0]);
// Console.WriteLine("Bran"[1]);
// Console.WriteLine("Bran"[2]);
// Console.WriteLine("Bran"[3]);
/*
Как видно из примера, 
вызов индексатора у строки получает символ с соответствующим номером.

Задание
Вам даны три переменные с фамилиями разных людей. 
Составьте и выведите на экран слово из символов в таком порядке:
третий символ из первой строки;
второй символ из второй строки;
четвертый символ из третьей строки;
пятый символ из второй строки;
третий символ из второй строки.

Вывод результата должен быть примерно в таком виде:
a b c d e
*/
var one = "Naharis";
var two = "Mormont";
var three = "Sand";
// BEGIN (write your solution here)
Console.WriteLine($"{one[2]} {two[1]} {three[3]} {two[4]} {two[2]}");
Console.WriteLine(one[2] + " " + two[1] + " " + three[3] + " " +  two[4] + " " + two[2]);
// END





